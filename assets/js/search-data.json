{
  
    
        "post0": {
            "title": "WolframTest Notebook",
            "content": "$Version . &#49;&#51;&#46;&#48;&#46;&#49;&#32;&#102;&#111;&#114;&#32;&#77;&#105;&#99;&#114;&#111;&#115;&#111;&#102;&#116;&#32;&#87;&#105;&#110;&#100;&#111;&#119;&#115;&#32;&#40;&#54;&#52;&#45;&#98;&#105;&#116;&#41;&#32;&#40;&#74;&#97;&#110;&#117;&#97;&#114;&#121;&#32;&#50;&#56;&#44;&#32;&#50;&#48;&#50;&#50;&#41; . FullForm[a+b+c] . FullForm[{a,b,c}] . neg3=-w // TeXForm . &#36;&#36;&#92;&#123;&#45;&#50;&#44;&#45;&#51;&#92;&#125;&#36;&#36; w={2,3} . &#123;&#50;&#44;&#32;&#51;&#125; . fun:= Sin[Sqrt[x^2 + y^2]]/Sqrt[x^2 + y^2] Plot3D[fun, {x, -5*Pi, 5*Pi}, {y, -5*Pi, 5*Pi}, PlotPoints -&gt; 100, BoxRatios -&gt; {1, 1, 0.2}, PlotRange -&gt; All] . $Version . &#49;&#51;&#46;&#48;&#46;&#49;&#32;&#102;&#111;&#114;&#32;&#77;&#105;&#99;&#114;&#111;&#115;&#111;&#102;&#116;&#32;&#87;&#105;&#110;&#100;&#111;&#119;&#115;&#32;&#40;&#54;&#52;&#45;&#98;&#105;&#116;&#41;&#32;&#40;&#74;&#97;&#110;&#117;&#97;&#114;&#121;&#32;&#50;&#56;&#44;&#32;&#50;&#48;&#50;&#50;&#41; .",
            "url": "https://akvsak.github.io/www/wolfram/2022/05/21/wolframtest.html",
            "relUrl": "/wolfram/2022/05/21/wolframtest.html",
            "date": " • May 21, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "The Wolfram Language",
            "content": "2+2 . &#52; . Range[10] . &#123;&#49;&#44;&#32;&#50;&#44;&#32;&#51;&#44;&#32;&#52;&#44;&#32;&#53;&#44;&#32;&#54;&#44;&#32;&#55;&#44;&#32;&#56;&#44;&#32;&#57;&#44;&#32;&#49;&#48;&#125; . NestList[f,x,5] . &#123;&#120;&#44;&#32;&#102;&#91;&#120;&#93;&#44;&#32;&#102;&#91;&#102;&#91;&#120;&#93;&#93;&#44;&#32;&#102;&#91;&#102;&#91;&#102;&#91;&#120;&#93;&#93;&#93;&#44;&#32;&#102;&#91;&#102;&#91;&#102;&#91;&#102;&#91;&#120;&#93;&#93;&#93;&#93;&#44;&#32;&#102;&#91;&#102;&#91;&#102;&#91;&#102;&#91;&#102;&#91;&#120;&#93;&#93;&#93;&#93;&#93;&#125; . List[a,b,c] . &#123;&#97;&#44;&#32;&#98;&#44;&#32;&#99;&#125; . Plus[2,2] . &#52; . Plus[Power[x,2],Times[3,Power[y,3]]] . ed=Graphics3D[Sphere[]] . EdgeDetect[%] . x . &#120; . ed=Graphics3D[Sphere[]] . ed . {3, 4, 5, 7/8, x, y, x^2 + 3 y^3, {a, b, c}, [ ! ( *Graphics3DBox[SphereBox[{0, 0, 0}], ImageSize -&gt; {46.62109375, Automatic}, ViewPoint -&gt; {1.3423934952878664`, -2.404165276254038, 1.9667152890703756`}, ViewVertical -&gt; {0.009348068236588528, -0.008691644947737727, 0.9999185311455862}] )]} . {3, 4, 5, 7/8, x, y, x^2 + 3 y^3, {a, b, c}, ed} . {a, b, c, d}[[3]] . &#99; . {a, b, c, d, e, f}[[-3]] . &#100; . {1, 2, 3} + 2 . &#123;&#51;&#44;&#32;&#52;&#44;&#32;&#53;&#125; . {a, b, c} + {x, y, z} . {a, b, c, d, e, f}[[2 ;; 4]] . &#123;&#98;&#44;&#32;&#99;&#44;&#32;&#100;&#125; . Table[x^2, {x, 10}] . &#123;&#49;&#44;&#32;&#52;&#44;&#32;&#57;&#44;&#32;&#49;&#54;&#44;&#32;&#50;&#53;&#44;&#32;&#51;&#54;&#44;&#32;&#52;&#57;&#44;&#32;&#54;&#52;&#44;&#32;&#56;&#49;&#44;&#32;&#49;&#48;&#48;&#125; . Table[f[x], {x, 4, 20, 2}] . &#123;&#102;&#91;&#52;&#93;&#44;&#32;&#102;&#91;&#54;&#93;&#44;&#32;&#102;&#91;&#56;&#93;&#44;&#32;&#102;&#91;&#49;&#48;&#93;&#44;&#32;&#102;&#91;&#49;&#50;&#93;&#44;&#32;&#102;&#91;&#49;&#52;&#93;&#44;&#32;&#102;&#91;&#49;&#54;&#93;&#44;&#32;&#102;&#91;&#49;&#56;&#93;&#44;&#32;&#102;&#91;&#50;&#48;&#93;&#125; . Table[f[x], {x, {5, 10, 20, 10, 5}}] . &#123;&#102;&#91;&#53;&#93;&#44;&#32;&#102;&#91;&#49;&#48;&#93;&#44;&#32;&#102;&#91;&#50;&#48;&#93;&#44;&#32;&#102;&#91;&#49;&#48;&#93;&#44;&#32;&#102;&#91;&#53;&#93;&#125; . Table[i/j,{i,4},{j,2}] . x = 7 . &#55; . t := Now . t . t . x =. . t =. . Module[{a = 1}, a + 8] . &#57; . Cases[{f[1], g[2], f[5], g[3]}, f[_]] . &#123;&#102;&#91;&#49;&#93;&#44;&#32;&#102;&#91;&#53;&#93;&#125; . Replace[f[100], f[x_] -&gt; x + 5] . &#49;&#48;&#53; . {f[1], g[2], f[5], g[3]} /. f[x_] -&gt; x + 5 . &#123;&#54;&#44;&#32;&#103;&#91;&#50;&#93;&#44;&#32;&#49;&#48;&#44;&#32;&#103;&#91;&#51;&#93;&#125; . Cases[{f[1, 2], f[1], g[3]}, f[__]] . &#123;&#102;&#91;&#49;&#44;&#32;&#50;&#93;&#44;&#32;&#102;&#91;&#49;&#93;&#125; . Cases[{f[1], g[2], f[2], f[5], g[3]}, f[1 | 5]] . &#123;&#102;&#91;&#49;&#93;&#44;&#32;&#102;&#91;&#53;&#93;&#125; . Cases[{f[1], g[2], f[2], f[5], g[3]}, (f | g)[2]] . &#123;&#103;&#91;&#50;&#93;&#44;&#32;&#102;&#91;&#50;&#93;&#125; . Cases[{1, 2.5, 3.5, 4}, _Real] . &#123;&#50;&#46;&#53;&#44;&#32;&#51;&#46;&#53;&#125; . *In[n] and Out[n] label successive inputs and outputs. You can refer to the most recent output as %—though it&#39;s usually better to define a variable. . *Arguments to functions are always separated by commas. . *Everything in the Wolfram Language is a symbolic expression. . numbers strings images arrays graphs formulas documents interfaces code ... . *All symbolic expressions have the same fundamental structure: head[arguments] . *The argument to a function can be any symbolic expression: . FullForm always shows the underlying structure.Head always gives the head of an expression; Length gives the number of arguments. . *It&#39;s conventional to start variable names with lowercase letters, reserving capitals for built-in objects: .",
            "url": "https://akvsak.github.io/www/wolfram/2022/05/21/wolfram-fast.html",
            "relUrl": "/wolfram/2022/05/21/wolfram-fast.html",
            "date": " • May 21, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://akvsak.github.io/www/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://akvsak.github.io/www/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://akvsak.github.io/www/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://akvsak.github.io/www/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}